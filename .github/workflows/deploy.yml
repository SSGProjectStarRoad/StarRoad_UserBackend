name: Docker Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: hriver1224/springboot-app
  JAVA_VERSION: 17

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Create application.properties
        run: |
          mkdir -p ./src/main/resources/config
          touch ./src/main/resources/config/application.properties
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/config/application.properties
          cat ./src/main/resources/config/application.properties

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: SSH to Deploy Server via Jump Host
        run: |
          expect -c "
          spawn ssh -o StrictHostKeyChecking=no ${{ secrets.JUMP_USER }}@${{ secrets.JUMP_HOST }}
          expect \"password:\"
          send \"${{ secrets.JUMP_PASSWORD }}\r\"
          expect \"$\"
          send \"ssh -o StrictHostKeyChecking=no ${{ secrets.PRIVATE_SERVER_USER }}@${{ secrets.PRIVATE_SERVER_HOST }}\r\"
          expect \"password:\"
          send \"${{ secrets.PRIVATE_SERVER_PASSWORD }}\r\"
          expect \"$\"
          send \"docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest\r\"
          expect \"$\"
          send \"docker stop springboot_app || true\r\"
          expect \"$\"
          send \"docker rm springboot_app || true\r\"
          expect \"$\"
          send \"docker run -d -p 8080:8080 --name springboot_app ${{ env.DOCKER_IMAGE_NAME }}:latest\r\"
          expect \"$\"
          send \"exit\r\"
          expect \"$\"
          send \"exit\r\"
          interact
          "
